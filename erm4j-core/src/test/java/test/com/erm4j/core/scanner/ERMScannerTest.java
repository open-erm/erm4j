package test.com.erm4j.core.scanner;


import static org.testng.AssertJUnit.assertTrue;

import java.util.List;

import org.testng.annotations.Test;

import com.erm4j.core.bean.Entity;
import com.erm4j.core.bean.EntityAttribute;
import com.erm4j.core.bean.EntityReferenceAttribute;
import com.erm4j.core.scanner.ERMScanner;
import com.erm4j.core.scanner.ModelScanResult;
import com.erm4j.core.scanner.impl.AnnotatedModelEntityBuilder;

public class ERMScannerTest {

	private static final String ORDER_ITEM_ENTITY_SYSTEM_NAME = "OrderItem";
	private static final String ORDER_ITEM_TABLE_NAME = "TBL_ORDER_ITEM";
	private static final String ORDER_ENTITY_SYSTEM_NAME = "Order";
	private static final String TABLE_PREFIX = "TBL_";

	@Test
	public void testScanModelAnnotatedEntitites() {
		ModelScanResult scanResult = new ERMScanner()
									.setPackageScanMask("test.com.erm4j.core")
									.addEntityBuilder(new AnnotatedModelEntityBuilder())
									.setTablePrefix(TABLE_PREFIX)
									.scan();
		 
		List<Entity> entities = scanResult.getEntities(); 
		assertTrue("Resolved 2 entities (from 3 classess in package)", entities.size() == 2);
		
		Entity orderEntity = entities.stream().filter(e -> e.getSystemName().equals(ORDER_ENTITY_SYSTEM_NAME))
												.findFirst()
												.orElse(null);
		assertTrue("Found order entity", orderEntity != null);
		
		assertTrue("Order entity has autogenerated uid", orderEntity.getUid().equals("test.com.erm4j.core.model.OrderEntity"));
		
		assertTrue("Order entity has correct table name", 
						orderEntity.getTable().equals(TABLE_PREFIX + ORDER_ENTITY_SYSTEM_NAME.toUpperCase()));

		assertTrue("Order entity has 3 attributes (from 4 fields in class)", orderEntity.getAttributes().size() == 3);

		Entity orderItemEntity = entities.stream().filter(e -> e.getSystemName().equals(ORDER_ITEM_ENTITY_SYSTEM_NAME))
													.findFirst()
													.orElse(null);
		assertTrue("Found order item entity", orderItemEntity != null);

		assertTrue("Order item entity has annotated uid", orderItemEntity.getUid().equals("order-item-entity-uid"));

		assertTrue("Order entity has correct table name", 
				orderItemEntity.getTable().equals(ORDER_ITEM_TABLE_NAME));
		
		assertTrue("Order entity has 5 attributes", orderItemEntity.getAttributes().size() == 5);
		
		EntityAttribute orderAttribute = orderItemEntity.getAttributes().stream().filter(a -> a.getSystemName().equalsIgnoreCase("Order"))
												.findFirst()
												.orElse(null);
		assertTrue("Found Order reference attribute in OrderItem entity", orderAttribute instanceof EntityReferenceAttribute);

		assertTrue("Order reference attribute has target entity Order uid",
					((EntityReferenceAttribute) orderAttribute).getTarget().getUid().equals(orderEntity.getUid()));

	}
	
}